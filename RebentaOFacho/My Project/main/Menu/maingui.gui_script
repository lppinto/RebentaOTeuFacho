local selected_round = "show_menu"
local music_playing = nil

function jump_tilly (self, node)
	local main_tilly = gui.get_node("Tilly")
	local inner_tilly = gui.get_node("inner_tilly")
	
	local scale = gui.get_scale(main_tilly)
	scale.x = -scale.x
	gui.set_scale(main_tilly, scale)
	sound.play("Gui#tillyupa", {delay = 0, gain = 0.5, pan = -1, speed = 1.5})
	gui.animate(inner_tilly, "position.y", 75, gui.EASING_INBOUNCE, 2, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)
end

function animate_little_tilly()
	local main_tilly = gui.get_node("Tilly")
	local inner_tilly = gui.get_node("inner_tilly")

	gui.animate(main_tilly, "position.x", 250, gui.EASING_LINEAR, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	timer.delay(2, true, jump_tilly)
end

function jump_ivo (self, node)
	local main_ivo = gui.get_node("Ivo")
	local inner_ivo = gui.get_node("inner_ivo")

	local scale = gui.get_scale(main_ivo)
	scale.x = -scale.x
	gui.set_scale(main_ivo, scale)
	sound.play("Gui#ivo_vitoria", {delay = 0, gain = 0.5, pan = 1, speed = 1.5})
	gui.animate(inner_ivo, "position.y", 80, gui.EASING_INBOUNCE, 2, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)
end

function animate_little_ivo()
	local main_ivo = gui.get_node("Ivo")
	local inner_ivo = gui.get_node("inner_ivo")

	gui.animate(main_ivo, "position.x", 730, gui.EASING_LINEAR, 10, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	timer.delay(5, true, jump_ivo)
end

function init(self)
	msg.post(".", "acquire_input_focus")

	animate_little_tilly()
	animate_little_ivo()

	local select_easy = gui.get_node("select_easy")
	local select_hard = gui.get_node("select_hard")
	gui.play_flipbook(select_easy, hash("no_select"))
	gui.play_flipbook(select_hard, hash("passos_select"))
	msg.post("main:/controler#controler", "hard")

	-- Play title song
	sound.play("Gui#wagner", {delay = 0, gain = 0.3, pan = 0, speed = 1})
end

function on_message(self, message_id, message, sender)
	if message_id == hash("total_score") then
		local node = gui.get_node("Score")
		local value = string.format("%09d", message[1])
		gui.set_text(node, value)
	elseif message_id == hash("max_score") then
		local node = gui.get_node("TopScore")
		local value = string.format("%09d", message[1])
		gui.set_text(node, value)
	elseif message_id == hash("max_fachos") then
		local node = gui.get_node("DeadFachos")
		local value = string.format("%05d", message[1])
		gui.set_text(node, value)
	end
end

local function unselect_all(self)
	local geleia = gui.get_node("Geleia")
	local vieira = gui.get_node("Vieira")
	local careca = gui.get_node("Careca")
	local cinha = gui.get_node("Cinha")
	local start = gui.get_node("Jogar")

	gui.play_flipbook(geleia, hash("geleiaSelect1"))
	gui.play_flipbook(vieira, hash("VieiraSelect1"))
	gui.play_flipbook(careca, hash("CarecaSelect1"))
	gui.play_flipbook(cinha, hash("cinhaSelect1"))
	gui.play_flipbook(start, hash("começa"))
end

function restart_title_music_tilly (self, message_id, message, id, sender)
	tilly_music_playing = false
	sound.pause("Gui#wagner", false)
end

function restart_title_music_ivo(self, message_id, message, id, sender)
	ivo_music_playing = false
	sound.pause("Gui#wagner", false)
end

local tilly_music_playing = false
local ivo_music_playing = false
function on_input(self, action_id, action)
	local geleia = gui.get_node("Geleia")
	local vieira = gui.get_node("Vieira")
	local careca = gui.get_node("Careca")
	local cinha = gui.get_node("Cinha")
	local start = gui.get_node("Jogar")
	local intro = gui.get_node("Intro")
	local main_tilly = gui.get_node("Tilly")
	local main_ivo = gui.get_node("Ivo")

	local select_easy = gui.get_node("select_easy")
	local select_hard = gui.get_node("select_hard")

	if action_id  == hash("click") and action.pressed then
		unselect_all(this)
		if gui.pick_node(geleia, action.x, action.y) then
			gui.play_flipbook(geleia, hash("geleiaSelect2"))
			sound.play("GeleiaSound#sound", {delay = 0, gain = 1.5, pan = -0.75, speed = 1})
			selected_round = "geleia_level"
			gui.play_flipbook(start, hash("começa_ok"))
		elseif gui.pick_node(vieira, action.x, action.y) then
			gui.play_flipbook(vieira, hash("VieiraSelect2"))
			sound.play("VieiraSound#sound", {delay = 0, gain = 1.5, pan = -0.5, speed = 1})
			selected_round = "vieira_level"
			gui.play_flipbook(start, hash("começa_ok"))
		elseif gui.pick_node(careca, action.x, action.y) then
			gui.play_flipbook(careca, hash("CarecaSelect2"))
			sound.play("CarecaSound#sound", {delay = 0, gain = 1.5, pan = 0.2, speed = 1})
			selected_round = "careca_level"
			gui.play_flipbook(start, hash("começa_ok"))
		elseif gui.pick_node(cinha, action.x, action.y) then
			gui.play_flipbook(cinha, hash("cinhaSelect2"))
			sound.play("CinhaSound#sound", {delay = 0, gain = 1.5, pan = 0.75, speed = 1})
			selected_round = "cinha_level"
			gui.play_flipbook(start, hash("começa_ok"))
		elseif gui.pick_node(start, action.x, action.y) then
			if selected_round == nil then
				sound.play("EscolheFachoSound#sound", {delay = 0, gain = 1.5, pan = 0, speed = 1})
			else
				msg.post("main:/controler#controler", selected_round)
			end
		elseif gui.pick_node(intro, action.x, action.y) then
			sound.play("EscolheFachoSound#sound", {delay = 0, gain = 1.1, pan = 0, speed = 1})
			gui.set_enabled(intro, false)
		elseif gui.pick_node(select_easy, action.x, action.y) then
			gui.play_flipbook(select_easy, hash("costa_select"))
			gui.play_flipbook(select_hard, hash("no_select"))
			sound.play("Gui#select_sound", {delay = 0, gain = 1, pan = 0, speed = 1})
			msg.post("main:/controler#controler", "easy")
		elseif gui.pick_node(select_hard, action.x, action.y) then
			gui.play_flipbook(select_easy, hash("no_select"))
			gui.play_flipbook(select_hard, hash("passos_select"))
			sound.play("Gui#select_sound", {delay = 0, gain = 1, pan = 0, speed = 1})
			msg.post("main:/controler#controler", "hard")
		end

		-- Music Selection
		if gui.pick_node(main_tilly, action.x, action.y) then
			if tilly_music_playing == false then
				tilly_music_playing = true
				sound.stop(music_playing)
				sound.pause("Gui#wagner", true)
				sound.play("Gui#mistergay", {delay = 0, gain = 1, pan = 0, speed = 1}, restart_title_music_tilly)
				music_playing = "Gui#mistergay"
			else
				sound.stop("Gui#mistergay")
				tilly_music_playing = false
			end
		end

		if gui.pick_node(main_ivo, action.x, action.y) then
			if ivo_music_playing == false then
				ivo_music_playing = true
				sound.stop(music_playing)
				sound.pause("Gui#wagner", true)
				sound.play("Gui#pronuncia_do_norte", {delay = 0, gain = 1, pan = 0, speed = 1}, restart_title_music_ivo)
				music_playing = "Gui#pronuncia_do_norte"
			else
				sound.stop("Gui#pronuncia_do_norte")
				ivo_music_playing = false
			end
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
