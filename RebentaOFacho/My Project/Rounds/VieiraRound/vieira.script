local nextSlap = 1
local numSlaps = 0
local numHits = 0
local finish_hits = 0
local numFails = 0
local clicksToFinish = 0
local wasHit = false
local finishHim = false
local continuous_hits = 0
local game_timer = nil
local computed_points = false
local num_combos = 0
local game_over = false
local game_over_signaled = false
local start = false
local dificulty = hard
local clicks_to_finish = 5

-- Damage levels / game states
local LEVEL0 = 1
local LEVEL1 = 2
local LEVEL2 = 3
local LEVEL3 = 4
local PREPARE_FINISH = 5
local WAIT_PREPARE_FINISH = 6
local FINISHING_LEVEL = 7
local FINISH_HIM = 8
local FINAL_RESULT = 9
local GAME_END = 10
local curr_level = LEVEL0

-- Initial object positions
local vieira_inner_init_pos = nil
local dildoright_init_pos = nil
local dildoleft_init_pos = nil

-- Time left
local total_left = 30
local function time_passed(self, handle, elapsed)
	total_left = total_left - elapsed
	if total_left < 6 then
		sound.play("FinishHer#ticktok", {delay = 0, gain = 2, pan = 0, speed = 1})
	end

	if total_left < 0 then total_left = 0 end
	label.set_text("Cenario#Elapsed", string.format("%d", total_left))
	if total_left == 0 then
		timer.cancel(handle)
		curr_level = FINAL_RESULT
		game_won = false
	end
end

local function combo_off(self, handle, elapsed)
	continuous_hits = 0
end

function start_game(self)
	if dificulty == "easy" then
		go.set("vieira", "position.x", 530)
		go.set("vieira", "position.y", 189)
	else			
		go.animate("vieira:/vieira", "position.y", go.PLAYBACK_LOOP_PINGPONG, 190, go.EASING_INOUTSINE, 2, 0)
	end

	game_timer = timer.delay(1,true,time_passed)

	-- combo timer off
	timer.delay(4, true, combo_off)
end

local vieira_next_side = "Right"
local function change_vieira_side ()
	local scalex = go.get("vieira", "scale.x")
	go.set("vieira", "scale.x", -scalex)
	
	if vieira_next_side == "Right" then
		go.set("vieira", "position.x", 445)
		vieira_next_side = "Left"
	elseif vieira_next_side == "Left" then
		go.set("vieira", "position.x", 550)
		vieira_next_side = "Right"
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("dificulty") then
		dificulty = message[1]
	elseif message_id == hash("start") then
		start = true
		start_game(self)
	end
end

local function animate_object(id, properties, playback, tos, easing, duration, callback)
	for index, property in ipairs(properties) do
		if callback == nill then	
			go.animate(id, property, playback, tos[index], easing, duration, 0)
		else
			go.animate(id, property, playback, tos[index], easing, duration, 0, callback)
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("vieira:/inner#sprite", "play_animation", {id = hash("vieira1")})
	currSlap = 0
	numSlaps = 0
	vibrarion = 5
	
	-- Hide final face
	msg.post("vieira:/Brain", "disable")
	msg.post("vieira:/Face", "disable")
	msg.post("vieira:/Top", "disable")
	msg.post("vieira:/boca", "disable")
	msg.post("vieira:/vieira_laughs", "disable")

	-- Initial object positions
	vieira_inner_init_pos = go.get_position("vieira:/inner")
	dildoright_init_pos = go.get_position("vieira:/Dildoright")
	dildoleft_init_pos = go.get_position("vieira:/Dildoleft")
end

function laugh_stop(self, handle, elapsed)
	go.cancel_animations("careca:/boca", "position.y")
	go.set("vieira:/boca", "position.y", -92)
	sound.stop("vieira:/laughs#mock_sound")
end

function player_loses()		
	-- Put Victim in the middle laughing
	msg.post("vieira:/inner", "disable")
	msg.post("vieira:/Brain", "disable")
	msg.post("vieira:/Face", "disable")
	msg.post("vieira:/Top", "disable")

	-- Enable laughing face
	msg.post("vieira:/boca", "enable")
	msg.post("vieira:/vieira_laughs", "enable")

	go.cancel_animations("vieira:/vieira", "position.y")
	go.set("vieira:/vieira", "position.y", 190)

	-- Animate facha mouth laughing
	timer.delay(10, false, laugh_stop)
	go.animate("vieira:/boca", "position.y", go.PLAYBACK_LOOP_PINGPONG, -170, go.EASING_INOUTSINE, 0.2, 0)
	sound.play("vieira:/laughs#mock_sound", {delay = 0, gain = 2, pan = 0, speed = 1})

	msg.post("Logo", "play_animation", {id = hash("fraco")})
	sound.play("FinishHer#looser", {delay = 0, gain = 3, pan = 0, speed = 1})
	sound.play("FinishHer#booing", {delay = 1, gain = 2, pan = 0, speed = 1})
end

function check_game_level(hits)
	if curr_level == FINISHING_LEVEL and numHits >= 70 then
		curr_level = FINISH_HIM
	end

	if curr_level < PREPARE_FINISH then
		if numHits >= 60 then
			curr_level = PREPARE_FINISH
		elseif numHits >= 45 then
			curr_level = LEVEL3
		elseif numHits >= 30 then
			curr_level = LEVEL2
		elseif numHits >= 15 then
			curr_level = LEVEL1
		elseif numHits >= 0 then
			curr_level = LEVEL0
		end
	end
end

local function finish_him ()
	animate_object ("vieira:/Top", {"position.y"}, go.PLAYBACK_ONCE_FORWARD, {1000}, go.EASING_LINEAR, 0.3)
	sound.play("vieira#cracked_skull", {delay = 0, gain = 4, pan = 0, speed = 1.00})
	sound.play("FinishHer#fatality", {delay = 2, gain = 2, pan = 0, speed = 1.00})
	sound.play("FinishHer#flies", {delay = 0, gain = 1, pan = 0, speed = 1.00})
	sound.play("FinishHer#cheers", {delay = 0, gain = 2, pan = 0, speed = 1.00})
	particlefx.play("Brain#moscas")

	go.cancel_animations("vieira:/MegaDildo", "position.y")
	sound.stop("MegaDildo#vibrator") 
	animate_object("vieira:/MegaDildo", {"position.y"}, go.PLAYBACK_ONCE_FORWARD, {-1000}, go.EASING_LINEAR, 5)
	
	-- Compute file points
	if computed_points == false then
		computed_points = true
		bonus_time = 60 + total_left * .2
		num_combos = num_combos * .3
		numHits = numHits + bonus_time + num_combos
		label.set_text("Cenario#Pontos", string.format("%d", numHits))
	end

	curr_level = FINAL_RESULT
	game_won = true
end

local function mega_dildo_prepared (self, url, property)
	go.cancel_animations("vieira:/Top", "position.x")
	go.cancel_animations("vieira:/Top", "position.y")

	go.set("vieira:/Top", "position.x", -70);

	-- start shacking her shit brain
	animate_object ("vieira:/Brain", {"position.x", "position.y"}, go.PLAYBACK_LOOP_BACKWARD, {-67, 215}, go.EASING_INBOUNCE, 0.2)

	-- Issue finish her
	sound.play("FinishHer#finishher", {delay = 0, gain = 2, pan = 0, speed = 1.00})

	-- Set Finish Her sign
	local pos = go.get_position()
	pos.x = 520
	pos.y = 600
	local finishher = factory.create("FinishHer#factory", pos)
	go.animate(finishher, "position.x", go.PLAYBACK_LOOP_PINGPONG, 510, go.EASING_LINEAR, 0.05, 0)
	
	curr_level = FINISHING_LEVEL
	nextSlap = 2
end

local function prepare_mega_dildo()
	timer.cancel(game_timer)
	sound.play("MegaDildo#odissey", {delay = 0, gain = 2, pan = 0, speed = 1.00})
	sound.play("MegaDildo#vibrator", {delay = 0, gain = 1, pan = 0, speed = 1.00}) 
	animate_object ("vieira:/inner_mega", {"position.x"}, go.PLAYBACK_LOOP_PINGPONG, {5}, go.EASING_INSINE, 0.1)
	animate_object ("vieira:/MegaDildo", {"position.y"}, go.PLAYBACK_ONCE_FORWARD, {-120}, go.EASING_LINEAR, 14, mega_dildo_prepared)
end

local function stop_vieira()
	-- stop Vieira and make her skull skake
	msg.post("vieira:/inner", "disable")
	msg.post("vieira:/Brain", "enable")
	msg.post("vieira:/Face", "enable")
	msg.post("vieira:/Top", "enable")

	-- animate top head
	go.animate("vieira:/Top", "position.y", go.PLAYBACK_LOOP_PINGPONG, 250, go.EASING_INBOUNCE, .3)
	go.animate("vieira:/Top", "position.x", go.PLAYBACK_LOOP_PINGPONG, -75, go.EASING_OUTBOUNCE, .3)

	go.cancel_animations("vieira:/vieira", "position.y")
	go.set("vieira:/vieira", "position.y", 189)
end

local fatality = false
function update(self, dt)
	if start == false then
		return
	end

	check_game_level (numHits)

	if curr_level == LEVEL0 or curr_level == LEVEL1 or curr_level == LEVEL2 or curr_level == LEVEL3 then
		if wasHit then
			wasHit = false
			msg.post("vieira:/inner#sprite", "play_animation", {id = hash(string.format("vieira%d",curr_level))})
		end
	elseif curr_level == PREPARE_FINISH then
		stop_vieira()
		prepare_mega_dildo()
		curr_level = WAIT_PREPARE_FINISH
	elseif curr_level == WAIT_PREPARE_FINISH then 
		return 
	elseif curr_level == FINISHING_LEVEL then
		return
	elseif curr_level == FINISH_HIM then
		finish_him ()
	elseif curr_level == FINAL_RESULT then 
		if game_won == false then
			player_loses()	
		end
		curr_level = GAME_END
	elseif GAME_END then
		return
	end

	if continuous_hits > 5 and finishHim == false then
		sound.play("FinishHer#combo", {delay = 0, gain = 3, pan = 0, speed = 1})
		num_combos = num_combos + 1
		total_left = total_left + 2
		continuous_hits = 0
	end
end

local function check_hit(dildo)
	local hit_sound = nil
	local particle_fx = nil
	local miss_sound = nil
	local sound_speed = nil
	local sound_pan = nil
	local shake_dir = nil

	if dildo == "Dildoleft" then
		hit_sound = "Dildoleft#sound"
		miss_sound = "Dildoleft#miss"
		sound_speed = 1.0
		sound_pan = -1
		shake_dir = 50
	elseif dildo == "Dildoright" then
		hit_sound = "Dildoright#sound"
		miss_sound = "Dildoright#miss"
		sound_speed = 1.10
		sound_pan = 1
		shake_dir = -50
	end
	
	if vieira_hit_pos.y < 190 and vieira_hit_pos.y > 50 then
		sound.play(hit_sound, {delay = 0, gain = 1, pan = sound_pan, speed = sound_speed})
		particlefx.play(particle_fx)

		-- shake vieira
		change_vieira_side (dildo)
		go.set_position(vieira_inner_init_pos, "vieira:/inner")
		go.cancel_animations("vieira:/inner", "position.x")
		animate_object("vieira:/inner", {"position.x"}, go.PLAYBACK_ONCE_PINGPONG, {shake_dir}, go.EASING_OUTBOUNCE, 0.2)
		numHits = numHits + 1
		continuous_hits = continuous_hits + 1
		wasHit = true
		particlefx.play("SkinTear")
	else
		sound.play(miss_sound, {delay = 0, gain = 1, pan = 0, speed = 1.00})
		numHits = numHits - 1
		if numHits < 0 then
			numHits = 0
		end
		continuous_hits = 0
		wasHit = false
	end
end

local can_hit_left = true
local can_hit_right = true

local function slap_left_finished(self, url, property)
	can_hit_left = true
end

local function finish_slap_left(self, url, property)
	msg.post("Dildoleft#sprite", "play_animation", {id = hash("Dildo2")})
	check_hit("Dildoleft")
	label.set_text("Cenario#Pontos", string.format("%d", numHits))
	animate_object ("vieira:/Dildoleft", {"position.x"}, go.PLAYBACK_ONCE_FORWARD, {60}, go.EASING_INBACK, 0.1, slap_left_finished)
end

local function slap_left()
	if can_hit_left == true then
		can_hit_left = false
		msg.post("Dildoleft#sprite", "play_animation", {id = hash("Dildo1")})
		go.set_position(dildoright_init_pos, "vieira:/Dildoright")
		animate_object ("vieira:/Dildoleft", {"position.x"}, go.PLAYBACK_ONCE_FORWARD, {400}, go.EASING_INBACK, 0.2, finish_slap_left)
		sound.play("Dildoleft#swoosh", {delay = 0, gain = 1, pan = -1.0, speed = 1.10})
	end
end

local function slap_right_finished(self, url, property)
	can_hit_right = true
end

local function finish_slap_right(self, url, property)
	msg.post("Dildoright#sprite", "play_animation", {id = hash("Dildo3")})
	check_hit("Dildoright")
	label.set_text("Cenario#Pontos", string.format("%d", numHits))
	animate_object ("vieira:/Dildoright", {"position.x"}, go.PLAYBACK_ONCE_FORWARD, {890}, go.EASING_INBACK, 0.1, slap_right_finished)
end

local function slap_right()
	if can_hit_right == true then
		can_hit_right = false
		msg.post("Dildoright#sprite", "play_animation", {id = hash("Dildo4")})
		go.set_position(dildoleft_init_pos, "vieira:/Dildoleft")
		animate_object ("vieira:/Dildoright", {"position.x"}, go.PLAYBACK_ONCE_FORWARD, {600}, go.EASING_INBACK, 0.2, finish_slap_right)
		sound.play("Dildoright#swoosh", {delay = 0, gain = 1, pan = 1.0, speed = 1.15})
	end
end

local mega_dildo_can_hit = true
local function mega_dildo_ready (self, url, property)
	mega_dildo_can_hit = true
end

local function finish_mega_dildo_slap (self, url, property)
	sound.play("Dildoleft#sound", {delay = 0, gain = 4, pan = 0, speed = 0.7})
	particlefx.play(particle_fx)
	animate_object ("vieira:/MegaDildo", {"position.y"}, go.PLAYBACK_ONCE_FORWARD, {-120}, go.EASING_INBACK, 0.3)
	animate_object ("vieira:/Top", {"position.y"}, go.PLAYBACK_ONCE_BACKWARD, {500}, go.EASING_INBOUNCE, 0.5, mega_dildo_ready)
	numHits = numHits + 1
	label.set_text("Cenario#Pontos", string.format("%d", numHits))
end

local function mega_dildo_slap(self, url, property)
	if mega_dildo_can_hit == true then
		mega_dildo_can_hit = false
		animate_object ("vieira:/MegaDildo", {"position.y"}, go.PLAYBACK_ONCE_FORWARD, {18}, go.EASING_INBACK, 0.1, finish_mega_dildo_slap)
	end
end

function on_input(self, action_id, action)
	if start == false then
		return
	end

	if curr_level == PREPARE_FINISH or curr_level == WAIT_PREPARE_FINISH or curr_level == FINISH or curr_level == FINAL_RESULT then
		return
	elseif curr_level == GAME_END then
		if action_id == hash("click") and action.pressed then
			clicks_to_finish = clicks_to_finish - 1
			if clicks_to_finish == 0 then
				msg.post("main:/controler#controler", "show_menu")
			end
		end
		return 
	else
		vieira_hit_pos = go.get_position("vieira")
		if action_id == hash("click") and action.pressed then
			if nextSlap == 0 then
				slap_left()
				nextSlap = 1
			elseif nextSlap == 1 then
				slap_right()
				nextSlap = 0
			elseif nextSlap == 2 then
				mega_dildo_slap ()
			end 
		end
	end
end
